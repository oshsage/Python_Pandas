# 병든 나이트가 N × M 크기 체스판의 가장 왼쪽아래 칸에 위치해 있다. 병든 나이트는 건강한 보통 체스의 나이트와 다르게 4가지로만 움직일 수 있다.
# 1. 2칸 위로, 1칸 오른쪽
# 2. 1칸 위로, 2칸 오른쪽
# 3. 1칸 아래로, 2칸 오른쪽
# 4. 2칸 아래로, 1칸 오른쪽
# 병든 나이트는 여행을 시작하려고 하고, 여행을 하면서 방문한 칸의 수를 최대로 하려고 한다. 병든 나이트의 이동 횟수가 4번보다 적지 않다면,
# 이동 방법을 모두 한 번씩 사용해야 한다. 이동 횟수가 4번보다 적은 경우(방문한 칸이 5개 미만)에는 이동 방법에 대한 제약이 없다.
# 체스판의 크기가 주어졌을 때, 병든 나이트가 여행에서 방문할 수 있는 칸의 최대 개수를 구해보자.

# 숫자 입력
a, b = input().split()
# 정수 변환
n = int(a)
m = int(b)
# 칸의 개수
cnt =0

# 오른쪽 이동밖에 없으므로 출발하면 도착지점이 겹치는 경우는 없다.
# 세로이동의 제한이 생기는 경우는 세로칸이 3칸일 때를 기준으로 나뉜다.
if n >=3:
    # 4가지를 모두 사용했을 때의 가로칸은 7칸이 필요하다.
    # 가로가 7칸 이상이면, 오른쪽으로 두 칸 이동하는 2번과 3번 이동을 한번씩만 사용하고 1번과 4번 이동만 사용하면 된다.
    # 따라서 방문 칸 수는 m-4+2 로 m -2이다.
    if m >=7:
        cnt = m - 2
    # 가로가 4~7칸이면 오른쪽으로 1칸 이동하면 방문 칸수가 5개이상이 된다. 따라서 2칸이동을 집어넣는데 그러면 최대이동횟수가 4이다.
    elif 4<=m and m<7:
        cnt = 4
    # 가로가 4칸 미만의 경우 처음 위치와 한 번의 오른쪽으로 이동하는 수에 따라 방문 칸수가 늘어난다.
    else:
        cnt = m
# 세로 칸이 3칸 미만이면 1번과 4번이동을 할 수 없다. 따라서 경우를 따로 잡아준다
elif n==2:
    if 5<=m and m<7:
        cnt =3
    elif 3<=m and m<5:
        cnt=2
    elif m<3:
        cnt =1
    # 가로가 7이상일 때, 방문 칸수는 4개를 넘을 수 없다.
    else:
        cnt=4
else:
    cnt =1
print(cnt)
